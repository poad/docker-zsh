name: Docker build and push
 
on:
  push:
    branches:
    - main 
  pull_request:
    branches:
      - main
  schedule:
    - cron:  '0 0 * * 2'

  workflow_dispatch:

jobs:
  configure:
    runs-on: ubuntu-latest
    if: github.actor != 'dependabot[bot]'
    env:
      ACTIONS_RUNNER_DEBUG: true
    steps:
      - name: Enable auto merge to pull request
        uses: poad/github-pull-request-auto-merge-enable-action@v1.0.0
        with:
          pull_request_number: ${{ github.event.pull_request.number }}
          github_token: ${{ secrets.PERSONAL_TOKEN_FOR_GITHUB_ACTIONS }}
          repository: ${{ github.event.repository.name }}
          owner: ${{ github.repository_owner }}
          merge_method: SQUASH

  docker_build_push:
    strategy:
      matrix:
        versions: [
          { distribution: 'ubuntu', dist_version_code: 'bionic', ubuntu_version_code: 'bionic', tag: 'bionic' },
          { distribution: 'ubuntu', dist_version_code: 'focal', ubuntu_version_code: 'focal', tag: 'focal' },
          { distribution: 'debian', dist_version_code: 'buster', ubuntu_version_code: 'bionic', tag: 'buster' },
          { distribution: 'ubuntu', dist_version_code: 'focal', ubuntu_version_code: 'focal', tag: 'latest' }
        ]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: Build
      env:
        IMAGRE_NAME: poad/docker-zsh:${{ matrix.versions.tag }}
        DOCKER_BUILDKIT: 1
      run: |
        CUR=$(pwd) && \
        docker build \
          -t ${IMAGRE_NAME} \
          --build-arg DISTRIBUTION=${{ matrix.versions.distribution }} \
          --build-arg DIST_VERSION_CODE=${{ matrix.versions.dist_version_code }} \
          --build-arg UBUNTU_VERSION_CODE=${{ matrix.versions.ubuntu_version_code }} \
          -f ${{ matrix.versions.distribution }}/Dockerfile \
          . && \
        cd ${CUR}

    - name: Push
      if: github.event_name != 'pull_request' && github.actor != 'dependabot[bot]'
      env:
        IMAGRE_NAME: poad/docker-zsh:${{ matrix.versions.tag }}
        DOCKER_BUILDKIT: 1
      run: |
        echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u poad --password-stdin && \
        docker push ${IMAGRE_NAME}
